{ "type":"object",
  "title": "Direct Debit",
  "name": "direct_debit",
  "description": "A direct debit can only be performed with a valid sepa mandate, authorizing access to the debtor's account.",
  "properties":{
    "id":{
      "description":"Unique identifier",
      "identity":true,
      "readonly":true,
      "type":"integer"
    },
    "external_uid":{
      "description": "Unique ID provided by the initiator of the transaction",
      "type":"string",
      "required" : true
    },
    "external_ref":{
      "description": "A customer provided reference to identify the debit in their system",
      "type":"string",
      "required" : true
    },
    "account_id":{
      "description": "Fidor account this transaction belongs to.",
      "required" : true,
      "type":"integer"
    },
    "user_id":{
      "description": "User who created the transfer.",
      "readonly":true,
      "type":"integer"
    },
    "mandate_id":{
      "description": "The sepa mandate used by the debit",
      "type":"number",
      "required" : true
    },
    "amount":{
      "description": "The transferred amount in account currency, two decimal places",
      "type":"number",
      "required" : true
    },
    "eref":{
      "description": "End-to-end reference.",
      "type":"string",
      "maxLength": 255
    },
    "subject":{
      "description": "Transfer subject",
      "type":"string",
      "maxLength": 255
    },
    "debit_note_date":{
      "description": "Date the debit will be withdrawn from the foreign account.",
      "format":"date",
      "required":true,
      "type":"string"
    },
    "state":{
      "description": "State of the transfer. in_clearance: Order is currently being processed | processed: Third party system confirmed booking of order | rejected: Order was rejected | error: An error occurred during execution",
      "enum":["in_clearance", "processed", "rejected", "error"],
      "readonly":true,
      "type":"string"
    },
    "created_at":{
      "description": "Creation date-time, never changes.",
      "format":"date-time",
      "readonly":true,
      "type":"string"
    }
  },
  "links":[
    { "rel": "self",
      "href": "debit_transfers/{id}"
    },
    { "rel": "instances",
      "href": "debit_transfers",
      "properties" : {
        "filter[account_ids]":{
          "title" : "Find transfers belonging to the given account ids. Single id or multiple ids comma-separated.",
          "format":"date",
          "type":"string"
        },
        "filter[external_ref]":{
          "title" : "Match full external reference",
          "type":"string"
        },
        "filter[created_at_from]":{
          "title" : "Creation date filter from >= date",
          "format":"date",
          "type":"string"
        },
        "filter[created_at_to]":{
          "title" : "Creation date filter to <= date",
          "format":"date",
          "type":"string"
        },
        "filter[states]":{
          "title" : "Filter by single or multiple csv delimited states",
          "enum":["pending", "in_clearance", "cleared", "processed", "rejected", "error"],
          "type":"string"
        },
        "filter[eref]":{
          "title" : "Match full end to end reference",
          "type":"string"
        },
        "page":{
          "title" : "Page",
          "description": "In paginated results set the page to retrieve",
          "type":"number"
        },
        "per_page":{
          "title" : "Per page",
          "description": "Results per page. Default is 10, max is 100",
          "type":"number"
        },
        "sort":{
          "title" : "Sort",
          "enum":["ASC","DESC"],
          "description": "Sort the results in ASC or DESC",
          "type": "string"
        }
      }
    },
    { "rel": "create",
      "href": "transfers",
      "method": "POST"
    }

  ]
}
