{
  "type"        : "object",
  "title"       : "Transaction",
  "name"        : "transaction",
  "description" : "A transaction is the result of a successful transfer or debit.",
  "properties"  : {
    "id" : {
      "$ref" : "./base_types/base_types.json#definitions/id"
    },
    "account_id" : {
      "$ref"     : "./base_types/base_types.json#definitions/account_id",
      "readonly" : true
    },
    "transaction_type" : {
      "$ref"     : "./base_types/base_types.json#definitions/transaction_type",
      "readonly" : true
    },
    "transaction_type_details" : {
      "description" : "Details specific to this transaction type are collected here.",
      "readonly"    : true,
      "type"        : "object",
      "oneOf"       : [
        {
          "name"        : "credit_card_details",
          "properties" : {
            "$ref" : "./transaction_type_details/credit_card_details.json#properties"
          }
        },
        {
          "name"        : "internal_transfer_details",
          "properties" : {
            "$ref" : "./transaction_type_details/internal_transfer_details.json#properties"
          }
        },
        {
          "name"        : "sepa_credit_transfer_details",
          "properties" : {
            "$ref" : "./transaction_type_details/sepa_credit_transfer_details.json#properties"
          }
        },
        {
          "name"        : "sepa_direct_debit_details",
          "properties" : {
            "$ref" : "./transaction_type_details/sepa_direct_debit_details.json#properties"
          }
        }
      ]
    },
    "subject" : {
      "$ref"     : "./base_types/base_types.json#definitions/subject",
      "readonly" : true
    },
    "amount" : {
      "description"      : "The transferred amount in account currency, in minor units, e.g. 1EUR is represented as 100. Can be negative e.g. if something was withdrawn from an account.",
      "type"             : "integer",
      "readonly" : true
    },
    "currency" : {
      "$ref"     : "./base_types/base_types.json#definitions/currency",
      "readonly" : true
    },
    "booking_date" : {
      "description" : "Date the transaction was booked. ISO 8601 Date",
      "format"      : "date",
      "readonly"    : true,
      "type"        : "string"
    },
    "value_date" : {
      "description" : "Date the amount was credited to the account. ISO 8601 Date",
      "format"      : "date",
      "readonly"    : true,
      "type"        : "string"
    },
    "booking_code" : {
      "description" : "Accounting transaction code in the central banking system",
      "readonly"    : true,
      "type"        : "string"
    },
    "return_transaction_id" : {
      "description" : "If the transaction was marked for return, this references the new return transaction.",
      "readonly"    : true,
      "type"        : "string"
    },
    "created_at" : {
      "$ref" : "./base_types/base_types.json#definitions/created_at"
    },
    "updated_at" : {
      "$ref" : "./base_types/base_types.json#definitions/updated_at"
    }
  },
  "links" : [
    {
      "rel"  : "self",
      "href" : "transactions/{id}"
    },
    {
      "rel"        : "instances",
      "href"       : "transactions",
      "properties" : {
        "filter[account_ids]" : {
          "title"  : "Find transactions belonging to the given account ids. Single id or multiple ids comma-separated.",
          "format" : "date",
          "type"   : "string"
        },
        "filter[id_from]" : {
          "title"  : "Find transactions with an id greater than given one.",
          "format" : "integer",
          "type"   : "string"
        },
        "filter[id_to]" : {
          "title"  : "Find transactions with an id smaller than given one.",
          "format" : "integer",
          "type"   : "string"
        },
        "filter[booking_date_from]" : {
          "title"  : "Date filter from >= date. ISO 8601 Date",
          "format" : "date",
          "type"   : "string"
        },
        "filter[booking_date_to]" : {
          "title"  : "Date filter to <= date. ISO 8601 Date",
          "format" : "date",
          "type"   : "string"
        },
        "filter[kinds]" : {
          "$ref"  : "./base_types/base_types.json#definitions/transaction_type",
          "title" : "By transaction types"
        },
        "page" : {
          "title"       : "Page",
          "description" : "In paginated results set the page to look for",
          "type"        : "number"
        },
        "per_page" : {
          "title"       : "Per page",
          "description" : "Results per page. Default is 10, max is 100",
          "type"        : "number"
        },
        "sort" : {
          "title" : "Sort",
          "enum"  : [
            "ASC",
            "DESC"
          ],
          "description" : "Sort the results in ASC or DESC",
          "type"        : "string"
        }
      }
    }
  ]
}
